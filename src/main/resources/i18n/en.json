{
  "selection": {
    "ZigbeeCoordinatorEntity": "ZigBee coordinator"
  },
  "help": {
      "colorControlMethod": "The commands used to control color. AUTO will use HUE if the device supports, otherwise XY",
      "enableAutoRelockTime": "",
      "fanModeSequence": "Possible fan modes that may be selected",
      "onTime": "Time in 100ms steps to automatically turn off when sent with timed command",
      "offWaitTime": "Time in 100ms steps to ignore ON commands after an OFF command",
      "defaultMoveRate": "Move rate in steps per second",
      "onLevel": "Default On level",
      "offTransitionTime": "Time in 100ms intervals to transition from ON to OFF",
      "onTransitionTime": "Time in 100ms intervals to transition from OFF to ON",
      "onOffTransitionTime": "Time in 100ms intervals to transition between ON and OFF",
      "invertReportControl": "Invert all level control reports received from the device",
      "invertLevelControl": "Invert all level control commands sent to the device",
      "defaultTransitionTime": "Default time in 100ms intervals to transition between ON and OFF",
      "pollingPeriod": "The time period in seconds between subsequent polls",
      "reportingChange": "The minimum change of the attribute value needed to trigger a device state update",
      "reportingTimeMin": "The minimum time period in seconds between device state updates",
      "reportingTimeMax": "The maximum time period in seconds between device state updates",
      "txPower": "Sets the device radio power. Power level is defined in dBm",
      "trustCentreJoinMode": "Sets the Trust Centre join/rejoin mode. TC_JOIN_DENY: Deny all joins.<br/>TC_JOIN_SECURE: Allow only secure joining. Devices should join with the TC Link Key or a Device Specific Link Key via an install code.<br/>TC_JOIN_INSECURE: Allow all joins.<br/>TC_JOIN_INSTALLCODE: Only join with install code. Devices attempting to join with the TC Link Key will be rejected",
      "powerMode": "Enabling boost mode improves the receive sensitivity by 2dB and increase the transmit power by 3dB",
      "portBaud": "BaudRate as bits per second",
      "panId": "Personal Area Network Identifier. This parameter is unique in a certain ZigBee network. This means that it will be the same in all the related devices, including the Coordinator (Meshlium or Gateway) and the Routers or End Devices (Waspmotes)",
      "networkKey": "The key is defined as 16 hexadecimal unique id. If not defined, a random key will be created. Set the current network key in use by the system",
      "meshUpdatePeriod": "Sets the update period for the mesh update service. This is the number of seconds between subsequent mesh updates. Setting the period to 0 will disable mesh updates",
      "linkKey": "Sets the Trust Center link security key to the specified value",
      "joinDeviceDuringScanOnly": "Join during scan only",
      "installCode": "Sets an installation key for the specified address. Using a blank key (ie all zeros) may be used to remove the install key. This is dongle specific if the key can be removed or if it will time out",
      "extendedPanId": "Sets the ZigBee Extended PAN ID to the specified value",
      "channelId": "Sets the ZigBee RF channel. The allowable channel range is 11 to 26 for 2.4GHz, however the transport implementation may allow any value it supports",
      "coordinatorHandler": "Coordinator handler",
      "discoveryDuration": "Discovery duration in seconds",
      "networkId": "Network Id",
      "logEvents": "Log device events"
  },
  "field": {
    "cls": "CLS",
    "endpointId": "Endpoint ID",
    "clusterId": "Cluster ID",
    "nodeInitializationStatus": "Node init status",
    "colorControlMethod": "Color Control Method",
    "enableAutoRelockTime": "Set auto relock time",
    "fanModeSequence": "Fan Mode Sequence",
    "onTime": "Auto OFF Time",
    "offWaitTime": "Off Wait Time",
    "defaultMoveRate": "Default move rate",
    "onLevel": "On level",
    "offTransitionTime": "Off Transition Time",
    "onTransitionTime": "On Transition Time",
    "onOffTransitionTime": "On/Off Transition Time",
    "invertReportControl": "Invert Level Reports",
    "invertLevelControl": "Invert Level Commands",
    "defaultTransitionTime": "Default Transition Time",
    "lastAnswerFromEndpoint": "Updated",
    "lastAnswerFromEndpoints": "Last answer",
    "flowControl": "Flow control",
    "reportingChange": "Report On Change",
    "reportingTimeMin": "Minimum Reporting Period",
    "reportingTimeMax": "Maximum Reporting Period",
    "pollingPeriod": "Pooling period",
    "channelsInitialized": "Channel fetched",
    "txPower": "TX power",
    "trustCentreJoinMode": "Trust Center join mode",
    "powerMode": "Power mode",
    "portBaud": "Port baud",
    "panId": "Pan Id",
    "networkKey": "Network key",
    "meshUpdatePeriod": "Mesh update period",
    "linkKey": "Link key",
    "joinDeviceDuringScanOnly": "Join during scan only",
    "installCode": "Install code",
    "extendedPanId": "Extended Pan Id",
    "channelId": "Channel Id",
    "coordinatorHandler": "Coordinator handler",
    "networkId": "Network Id",
    "currentPowerLevel": "Power level",
    "currentPowerMode": "Power mode",
    "dateCode": "Date code",
    "zclVersion": "Zcl version",
    "stackVersion": "Stack version",
    "hwVersion": "HW Version",
    "useOnOffTime": "Use On/Off times",
    "useOnOffTransitionTime": "Use On/Off transition time",
    "clusterName": "Cluster name",
    "fetchBasicCluster": "Fetch basic cluster",
    "lastPollRequest": "Last poll request",
    "minPollingInterval": "Min polling interval",
    "bindErrorMessage": "Bind error",
    "expectedNextPollRequest": "Expected next poll",
    "failedPollRequests": "Failed poll requests",
    "bindStatus": "Binding status",
    "firmwareVersion": "Firmware version",
    "manufacturerCode": "Manufacturer code",
    "appVersion": "App version",
    "nodeStatus": "Node status"
  },
  "zigbee": {
    "device": {
      "legrand_dimmer_without_neutral": "Legrand with Netatmo Dimmer",
      "TS0044": "Wall switch TS0044",
      "TS0043": "Wall Switch TS0043",
      "TS0042": "Wall Switch TS0042",
      "TS0041": "Wall Switch TS0041",
      "philips_sml001": "Hue Motion Sensor",
      "philips_rwl022": "Hue Dimmer Switch",
      "philips_rwl021": "Hue Dimmer Switch",
      "bitron-video-av2010-34": "Bitron Video Wall Switch AV2010/34",
      "bitron-video-902010-23": "BitronVideo 4-button Remote Control",
      "innr-rc-110": "Innr RC 110 Remote Control",
      "lumi": {
        "ctrl_ln2": {
          "aq1": "Xaomi Wall Switch"
        },
        "relay": {
          "c2acn01": "Wireless Relay Controller"
        },
        "remote": {
          "b186acn01": "Xiaomi Remote Wall Switch",
          "b1acn01": "Aqara Wireless Switch",
          "b286acn01": "Xiaomi Remote 2 Button Switch"
        },
        "sensor_wleak": {
          "aq1": "Xiaomi Aqara Water Leak Sensor"
        },
        "sensor_switch": {
          "aq1": "MiJia Wireless Switch",
          "aq2": "Xiaomi Wireless Mini Switch"
        },
        "sensor_cube": {
          "aqgl01": "Xaomi Aqara Magic Cube"
        },
        "sensor_ht": "Xiaomi Temperature and Humidity Sensor",
        "plug": "Xiaomi Socket Plug 2",
        "sensor_86sw2": "Xiaomi Wireless 2-Button",
        "sensor_motion": {
          "aq2": "Xiaomi Motion Sensor"
        },
        "weather": "Weather sensor",
        "sensor_smoke": "Smoke detector",
        "sensor_magnet": {
          "aq1": "Xiaomi Door Sensor",
          "aq2": "Aqara Window and Door Sensor"
        }
      }
    },
    "name": "ZigBee",
    "switch_cluster": "Switch cluster",
    "setting": {
      "label": "ZigBee",
      "st_ZigBeeDiscoveryClusterTimeoutSetting": "Discovery timeout",
      "st_ZigBeeDiscoveryOnStartupSetting": "Discovery on startup"
    },
    "error": {
      "offline_comms_fail": "Communication failed",
      "offline_bad_response": "Bad response",
      "offline_initialize_fail": "Initialize failed",
      "offline_discovery_incomplete": "Discovery incomplete",
      "convert_create": "Error create converter",
      "offline_node_not_found": "Node not found",
      "removed_by_dongle": "Node removed by dongle",
      "alive_timeout_reached": "Node alive timeout reached",
      "handler_initializing_error": "Handler initialization error"
    },
    "action": {
      "read_attributes": "Read all attributes",
      "rebind": "Try bind cluster",
      "select_model_identifier": "Select Model Identifier",
      "permit_join": "Permit join",
      "poll_values": "Poll values"
    },
    "endpoint": {
      "name": {
        "dimDown": "Button Dim Down",
        "dimUp": "Button Dim Up",
        "buttonO": "Button O",
        "buttonI": "Button I",
        "button1": "Button 1",
        "button2": "Button 2",
        "button3": "Button 3",
        "button4": "Button 4",
        "scenes6": "Button 6",
        "scenes5": "Button 5",
        "scenes4": "Button 4",
        "scenes3": "Button 3",
        "scenes2": "Button 2",
        "scenes1": "Button 1",
        "scenesPlus": "Button +",
        "scenesMinus": "Button -",
        "scenesOff": "Button Off",
        "scenesOn": "Button On",
        "both_button": "Left & Right button",
        "center_button": "Center Button",
        "right_button": "Right button",
        "left_button": "Left button",
        "contact_switch": "Contact open (Switch)",
        "power_consumption": "Power consumption",
        "rely_channel_1": "Relay Channel 1",
        "rely_channel_2": "Relay Channel 2",
        "analog_input": "Analog Input",
        "multistate_input": "Multistate Input",
        "switch_onoff": "Switch",
        "switch_level": "Level Control",
        "warning_device": "Warning Device",
        "color_color": "Color",
        "color_temperature": "Color Temperature",
        "measurement_illuminance": "Illuminance",
        "measurement_temperature": "Temperature",
        "measurement_relativehumidity": "Humidity",
        "measurement_pressure": "Atmospheric Pressure",
        "sensor_occupancy": "Occupancy",
        "fancontrol": "Fan Control",
        "binaryinput": "Binary Input",
        "ias_cosensor": "Carbon Monoxide Detector",
        "ias_contactportal1": "Contact Portal 1",
        "ias_contactportal2": "Contact Portal 2",
        "ias_motionintrusion": "Motion Intrusion",
        "ias_motionpresence": "CIE System Alarm",
        "ias_standard_system": "CIE System Alarm",
        "ias_fire": "Fire Alarm",
        "ias_water": "Water Alarm",
        "ias_movement": "Movement Alarm",
        "ias_vibration": "Vibration Alarm",
        "ias_lowbattery": "Low Battery",
        "ias_tamper": "Tamper",
        "electrical_activepower": "Total Active Power",
        "electrical_rmsvoltage": "RMS Voltage",
        "battery_level": "Battery Level",
        "battery_voltage": "Battery Voltage",
        "battery_alarm": "Battery Alarm",
        "battery_mains_voltage": "Battery MainsVoltage",
        "electrical_rmscurrent": "RMS Current",
        "thermostat_localtemp": "Local Temperature",
        "thermostat_outdoortemp": "Outdoor Temperature",
        "thermostat_occupiedcooling": "Occupied Cooling Setpoint",
        "thermostat_occupiedheating": "Occupied Heating Setpoint",
        "thermostat_unoccupiedcooling": "Unoccupied Cooling Setpoint",
        "thermostat_unoccupiedheating": "Unoccupied Heating Setpoint",
        "thermostat_systemmode": "System Mode",
        "thermostat_runningmode": "Running Mode",
        "thermostat_heatingdemand": "Heating Demand",
        "thermostat_coolingdemand": "Cooling Demand",
        "door_state": "Door Lock State",
        "windowcovering_lift": "Window Covering Lift",
        "metering_instantdemand": "Metering Instantaneous Demand",
        "metering_sumdelivered": "Metering Summation Received",
        "tuya_button": "Button"
      },
      "description": {
        "dimDown": "Button with the darker light",
        "dimUp": "Button with the brighter light",
        "buttonO": "Bottom Button 'O'",
        "buttonI": "Top Button 'I'",
        "button1": "Button marked with one dot",
        "button2": "Button marked with two dots",
        "button3": "Button marked with three dots",
        "button4": "Button marked with four dots",
        "scenes6": "Button 6 (with Scenes selected)",
        "scenes5": "Button 5 (with Scenes selected)",
        "scenes4": "Button 4 (with Scenes selected)",
        "scenes3": "Button 3 (with Scenes selected)",
        "scenes2": "Button 2 (with Scenes selected)",
        "scenes1": "Button 1 (with Scenes selected)",
        "scenesPlus": "Button '+' (with Scenes selected)",
        "scenesMinus": "Button '-' (with Scenes selected)",
        "scenesOff": "Button 'On/Off' turning Off (with Scenes selected)",
        "scenesOn": "Button 'On/Off' turning On (with Scenes selected)",
        "contact_switch": "The magnetic contact, seen by the device as a switch that is on when the contact is open",
        "analog_input": "The Analog Input (Basic) cluster provides an interface for reading the value of an analog measurement and accessing various characteristics of that measurement",
        "multistate_input": "The Multistate Input (Basic) cluster provides an interface for reading the value of a multistate measurement and accessing various characteristics of that measurement",
        "battery_voltage": "The current voltage",
        "battery_alarm": "The battery alarm state",
        "color_color": "The color cluster allows to control the color of a light. It is also possible to dim values and switch the light on and off",
        "door_state": "Locks and unlocks the door and maintains the lock state",
        "fancontrol": "Set the fan mode",
        "electrical_activepower": "The total power consumed by the device",
        "electrical_rmscurrent": "The current RMS current measurement",
        "electrical_rmsvoltage": "The current RMS voltage measurement",
        "binaryinput": "Indicates a binary input sensor state",
        "ias_contactportal1": "Contact sensor",
        "ias_motionintrusion": "Motion intrusion sensor",
        "ias_codetector": "Carbon Monoxide Alarm",
        "ias_fire": "Fire Indication Alarm",
        "ias_water": "Water Sensor Alarm",
        "ias_movement": "Movement Sensor Alarm",
        "ias_vibration": "Vibration Sensor Alarm",
        "ias_tamper": "Indicates if a device is tampered with",
        "measurement_illuminance": "Indicates the current illuminance in lux",
        "measurement_pressure": "Indicates the current pressure",
        "measurement_relativehumidity": "Indicates the current relative humidity",
        "measurement_temperature": "Indicates the current temperature",
        "metering_instantdemand": "The instantaneous demand from the metering system",
        "metering_sumdelivered": "The total delivered from the metering system",
        "metering_sumreceived": "The total delivered from the metering system",
        "sensor_occupancy": "Indicates if an occupancy sensor is triggered",
        "switch_onoff": "Switches the power on and off",
        "switch_level": "Sets the level of the light",
        "thermostat_localtemp": "Indicates the local temperature provided by the thermostat",
        "thermostat_outdoortemp": "Indicates the outdoor temperature provided by the thermostat",
        "thermostat_occupiedheating": "Set the heating temperature when the room is occupied",
        "thermostat_occupiedcooling": "Set the cooling temperature when the room is occupied",
        "thermostat_unoccupiedheating": "Set the heating temperature when the room is unoccupied",
        "thermostat_unoccupiedcooling": "Set the cooling temperature when the room is unoccupied",
        "thermostat_systemmode": "Set the system mode of the thermostat",
        "thermostat_runningmode": "The running mode of the thermostat",
        "thermostat_heatingdemand": "The level of heating currently demanded by the thermostat",
        "thermostat_coolingdemand": "The level of cooling currently demanded by the thermostat",
        "warning_device": "Triggers warnings on a warning device",
        "windowcovering_lift": "Sets the window covering level - supporting open/close and up/down type commands",
        "tuya_button": "Emits events when button is pressed"
      }
    }
  }
},
